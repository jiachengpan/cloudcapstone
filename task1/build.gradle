
apply plugin: 'java'

version '1.0'

repositories {
    mavenCentral()
}

configurations {
    provided
}

dependencies {
    provided group: 'org.apache.hadoop', name: 'hadoop-auth', version: '2.+'
    compile group: 'org.apache.hadoop', name: 'hadoop-core', version: '1.+'
    compile group: 'org.apache.hadoop', name: 'hadoop-common', version: '2.+'
    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.2'

    compile group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.10.+'

    testCompile group: 'org.apache.mrunit', name: 'mrunit', version: '1.+', classifier: 'hadoop1'
    testCompile group: 'org.apache.mrunit', name: 'mrunit', version: '1.+', classifier: 'hadoop2'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

sourceSets.main.compileClasspath += [configurations.provided]

task cleanWorkspace(type: Delete) { delete 'workspace/output' }

def runTest(testclass) {
    return tasks.create('runTest_' + testclass, JavaExec) {
        dependsOn = [jar, cleanWorkspace]
        classpath = sourceSets.main.runtimeClasspath

        main = 'org.apache.hadoop.util.RunJar'
        workingDir = './workspace'

        args = [
                '../build/libs/' + rootProject.name + '-' + version + '.jar',
                'me.jiacheng.cloudcapstone.utils.cloudcapstone.tasks.' + testclass,
                'input/aviation/*/*/*.csv',
                'output'
        ]
    }
}


task TopAirlinesByOntimeArrival { finalizedBy runTest(name) }
task TopAirportsByPopularity    { finalizedBy runTest(name) }
task TopCarriersByOntimeDeparturePerAirport { finalizedBy runTest(name) }
task TopCarriersByOntimeDeparturePerRoute   { finalizedBy runTest(name) }
task TopDestAirportByOntimeDeparturePerAirport  { finalizedBy runTest(name) }
task SuitableRoutes { finalizedBy runTest(name) }
